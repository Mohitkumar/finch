// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: api/v1/flow.proto

package api_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FlowContext_WorkflowState int32

const (
	FlowContext_RUNNING   FlowContext_WorkflowState = 0
	FlowContext_FAILED    FlowContext_WorkflowState = 1
	FlowContext_COMPLETED FlowContext_WorkflowState = 2
)

// Enum value maps for FlowContext_WorkflowState.
var (
	FlowContext_WorkflowState_name = map[int32]string{
		0: "RUNNING",
		1: "FAILED",
		2: "COMPLETED",
	}
	FlowContext_WorkflowState_value = map[string]int32{
		"RUNNING":   0,
		"FAILED":    1,
		"COMPLETED": 2,
	}
)

func (x FlowContext_WorkflowState) Enum() *FlowContext_WorkflowState {
	p := new(FlowContext_WorkflowState)
	*p = x
	return p
}

func (x FlowContext_WorkflowState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlowContext_WorkflowState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_flow_proto_enumTypes[0].Descriptor()
}

func (FlowContext_WorkflowState) Type() protoreflect.EnumType {
	return &file_api_v1_flow_proto_enumTypes[0]
}

func (x FlowContext_WorkflowState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FlowContext_WorkflowState.Descriptor instead.
func (FlowContext_WorkflowState) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_flow_proto_rawDescGZIP(), []int{0, 0}
}

type FlowContext_ActionState int32

const (
	FlowContext_A_RUNNING   FlowContext_ActionState = 0
	FlowContext_A_FAILED    FlowContext_ActionState = 1
	FlowContext_A_COMPLETED FlowContext_ActionState = 2
)

// Enum value maps for FlowContext_ActionState.
var (
	FlowContext_ActionState_name = map[int32]string{
		0: "A_RUNNING",
		1: "A_FAILED",
		2: "A_COMPLETED",
	}
	FlowContext_ActionState_value = map[string]int32{
		"A_RUNNING":   0,
		"A_FAILED":    1,
		"A_COMPLETED": 2,
	}
)

func (x FlowContext_ActionState) Enum() *FlowContext_ActionState {
	p := new(FlowContext_ActionState)
	*p = x
	return p
}

func (x FlowContext_ActionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlowContext_ActionState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_flow_proto_enumTypes[1].Descriptor()
}

func (FlowContext_ActionState) Type() protoreflect.EnumType {
	return &file_api_v1_flow_proto_enumTypes[1]
}

func (x FlowContext_ActionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FlowContext_ActionState.Descriptor instead.
func (FlowContext_ActionState) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_flow_proto_rawDescGZIP(), []int{0, 1}
}

type TaskResult_Status int32

const (
	TaskResult_SUCCESS TaskResult_Status = 0
	TaskResult_FAIL    TaskResult_Status = 1
)

// Enum value maps for TaskResult_Status.
var (
	TaskResult_Status_name = map[int32]string{
		0: "SUCCESS",
		1: "FAIL",
	}
	TaskResult_Status_value = map[string]int32{
		"SUCCESS": 0,
		"FAIL":    1,
	}
)

func (x TaskResult_Status) Enum() *TaskResult_Status {
	p := new(TaskResult_Status)
	*p = x
	return p
}

func (x TaskResult_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskResult_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_flow_proto_enumTypes[2].Descriptor()
}

func (TaskResult_Status) Type() protoreflect.EnumType {
	return &file_api_v1_flow_proto_enumTypes[2]
}

func (x TaskResult_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskResult_Status.Descriptor instead.
func (TaskResult_Status) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_flow_proto_rawDescGZIP(), []int{2, 0}
}

type FlowContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CurrentAction      int32                      `protobuf:"varint,2,opt,name=currentAction,proto3" json:"currentAction,omitempty"`
	NextAction         int32                      `protobuf:"varint,3,opt,name=nextAction,proto3" json:"nextAction,omitempty"`
	WorkflowState      FlowContext_WorkflowState  `protobuf:"varint,4,opt,name=workflowState,proto3,enum=FlowContext_WorkflowState" json:"workflowState,omitempty"`
	CurrentActionState FlowContext_ActionState    `protobuf:"varint,5,opt,name=currentActionState,proto3,enum=FlowContext_ActionState" json:"currentActionState,omitempty"`
	Data               map[string]*structpb.Value `protobuf:"bytes,6,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ttl                uint64                     `protobuf:"varint,7,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *FlowContext) Reset() {
	*x = FlowContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_flow_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowContext) ProtoMessage() {}

func (x *FlowContext) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_flow_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowContext.ProtoReflect.Descriptor instead.
func (*FlowContext) Descriptor() ([]byte, []int) {
	return file_api_v1_flow_proto_rawDescGZIP(), []int{0}
}

func (x *FlowContext) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FlowContext) GetCurrentAction() int32 {
	if x != nil {
		return x.CurrentAction
	}
	return 0
}

func (x *FlowContext) GetNextAction() int32 {
	if x != nil {
		return x.NextAction
	}
	return 0
}

func (x *FlowContext) GetWorkflowState() FlowContext_WorkflowState {
	if x != nil {
		return x.WorkflowState
	}
	return FlowContext_RUNNING
}

func (x *FlowContext) GetCurrentActionState() FlowContext_ActionState {
	if x != nil {
		return x.CurrentActionState
	}
	return FlowContext_A_RUNNING
}

func (x *FlowContext) GetData() map[string]*structpb.Value {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FlowContext) GetTtl() uint64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowName string                     `protobuf:"bytes,1,opt,name=workflowName,proto3" json:"workflowName,omitempty"`
	FlowId       string                     `protobuf:"bytes,2,opt,name=flowId,proto3" json:"flowId,omitempty"`
	Data         map[string]*structpb.Value `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_flow_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_flow_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_api_v1_flow_proto_rawDescGZIP(), []int{1}
}

func (x *Task) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *Task) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *Task) GetData() map[string]*structpb.Value {
	if x != nil {
		return x.Data
	}
	return nil
}

type TaskResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowName string                     `protobuf:"bytes,1,opt,name=workflowName,proto3" json:"workflowName,omitempty"`
	FlowId       string                     `protobuf:"bytes,2,opt,name=flowId,proto3" json:"flowId,omitempty"`
	ActionId     int32                      `protobuf:"varint,3,opt,name=actionId,proto3" json:"actionId,omitempty"`
	Data         map[string]*structpb.Value `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Status       TaskResult_Status          `protobuf:"varint,5,opt,name=status,proto3,enum=TaskResult_Status" json:"status,omitempty"`
}

func (x *TaskResult) Reset() {
	*x = TaskResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_flow_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResult) ProtoMessage() {}

func (x *TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_flow_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResult.ProtoReflect.Descriptor instead.
func (*TaskResult) Descriptor() ([]byte, []int) {
	return file_api_v1_flow_proto_rawDescGZIP(), []int{2}
}

func (x *TaskResult) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *TaskResult) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *TaskResult) GetActionId() int32 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

func (x *TaskResult) GetData() map[string]*structpb.Value {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TaskResult) GetStatus() TaskResult_Status {
	if x != nil {
		return x.Status
	}
	return TaskResult_SUCCESS
}

type TaskPollRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskType string `protobuf:"bytes,1,opt,name=taskType,proto3" json:"taskType,omitempty"`
}

func (x *TaskPollRequest) Reset() {
	*x = TaskPollRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_flow_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskPollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskPollRequest) ProtoMessage() {}

func (x *TaskPollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_flow_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskPollRequest.ProtoReflect.Descriptor instead.
func (*TaskPollRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_flow_proto_rawDescGZIP(), []int{3}
}

func (x *TaskPollRequest) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

type TaskResultPushResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *TaskResultPushResponse) Reset() {
	*x = TaskResultPushResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_flow_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskResultPushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResultPushResponse) ProtoMessage() {}

func (x *TaskResultPushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_flow_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResultPushResponse.ProtoReflect.Descriptor instead.
func (*TaskResultPushResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_flow_proto_rawDescGZIP(), []int{4}
}

func (x *TaskResultPushResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

var File_api_v1_flow_proto protoreflect.FileDescriptor

var file_api_v1_flow_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xf4, 0x03, 0x0a, 0x0b, 0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x65, 0x78,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x74, 0x74,
	0x6c, 0x1a, 0x4f, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x37, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x22, 0x3b, 0x0a, 0x0b, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x5f,
	0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x22, 0xb8, 0x01, 0x0a, 0x04, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x4f, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xad, 0x02, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x1a, 0x4f, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x1f, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x41, 0x49,
	0x4c, 0x10, 0x01, 0x22, 0x2d, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x30, 0x0a, 0x16, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x32, 0x8b, 0x01, 0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x50, 0x6f, 0x6c, 0x6c, 0x12, 0x10, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x05,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x0a, 0x50, 0x6f, 0x6c, 0x6c, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x10, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x05, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x2e, 0x0a, 0x04, 0x50, 0x75, 0x73, 0x68, 0x12, 0x0b, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x17, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x1e, 0x5a, 0x1c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6d, 0x6f, 0x68, 0x69, 0x74, 0x6b, 0x75, 0x6d, 0x61, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x5f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_flow_proto_rawDescOnce sync.Once
	file_api_v1_flow_proto_rawDescData = file_api_v1_flow_proto_rawDesc
)

func file_api_v1_flow_proto_rawDescGZIP() []byte {
	file_api_v1_flow_proto_rawDescOnce.Do(func() {
		file_api_v1_flow_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_flow_proto_rawDescData)
	})
	return file_api_v1_flow_proto_rawDescData
}

var file_api_v1_flow_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_v1_flow_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_v1_flow_proto_goTypes = []interface{}{
	(FlowContext_WorkflowState)(0), // 0: FlowContext.WorkflowState
	(FlowContext_ActionState)(0),   // 1: FlowContext.ActionState
	(TaskResult_Status)(0),         // 2: TaskResult.Status
	(*FlowContext)(nil),            // 3: FlowContext
	(*Task)(nil),                   // 4: Task
	(*TaskResult)(nil),             // 5: TaskResult
	(*TaskPollRequest)(nil),        // 6: TaskPollRequest
	(*TaskResultPushResponse)(nil), // 7: TaskResultPushResponse
	nil,                            // 8: FlowContext.DataEntry
	nil,                            // 9: Task.DataEntry
	nil,                            // 10: TaskResult.DataEntry
	(*structpb.Value)(nil),         // 11: google.protobuf.Value
}
var file_api_v1_flow_proto_depIdxs = []int32{
	0,  // 0: FlowContext.workflowState:type_name -> FlowContext.WorkflowState
	1,  // 1: FlowContext.currentActionState:type_name -> FlowContext.ActionState
	8,  // 2: FlowContext.data:type_name -> FlowContext.DataEntry
	9,  // 3: Task.data:type_name -> Task.DataEntry
	10, // 4: TaskResult.data:type_name -> TaskResult.DataEntry
	2,  // 5: TaskResult.status:type_name -> TaskResult.Status
	11, // 6: FlowContext.DataEntry.value:type_name -> google.protobuf.Value
	11, // 7: Task.DataEntry.value:type_name -> google.protobuf.Value
	11, // 8: TaskResult.DataEntry.value:type_name -> google.protobuf.Value
	6,  // 9: TaskService.Poll:input_type -> TaskPollRequest
	6,  // 10: TaskService.PollStream:input_type -> TaskPollRequest
	5,  // 11: TaskService.Push:input_type -> TaskResult
	4,  // 12: TaskService.Poll:output_type -> Task
	4,  // 13: TaskService.PollStream:output_type -> Task
	7,  // 14: TaskService.Push:output_type -> TaskResultPushResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_api_v1_flow_proto_init() }
func file_api_v1_flow_proto_init() {
	if File_api_v1_flow_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_flow_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_flow_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_flow_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_flow_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskPollRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_flow_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskResultPushResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_flow_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_flow_proto_goTypes,
		DependencyIndexes: file_api_v1_flow_proto_depIdxs,
		EnumInfos:         file_api_v1_flow_proto_enumTypes,
		MessageInfos:      file_api_v1_flow_proto_msgTypes,
	}.Build()
	File_api_v1_flow_proto = out.File
	file_api_v1_flow_proto_rawDesc = nil
	file_api_v1_flow_proto_goTypes = nil
	file_api_v1_flow_proto_depIdxs = nil
}
